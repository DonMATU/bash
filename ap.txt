pip3 install adafruit-circuitpython-rgb-display

sudo apt-get update
sudo apt-get install python3-pip
pip3 install pillow mss




import digitalio
import board
from PIL import Image, ImageDraw, ImageFont
from adafruit_rgb_display import ili9341
import time

print("Configurando la interfaz SPI...")

# Configuración de la interfaz SPI
spi = board.SPI()
tft_cs = digitalio.DigitalInOut(board.CE0)
tft_dc = digitalio.DigitalInOut(board.D25)
tft_reset = digitalio.DigitalInOut(board.D24)

print("Inicializando la pantalla TFT...")

# Configuración de la pantalla
display = ili9341.ILI9341(spi, cs=tft_cs, dc=tft_dc, rst=tft_reset, width=320, height=240, rotation=0)

print("Pantalla TFT inicializada. Creando imágenes...")

while True:
    # Crear una imagen roja
    image_red = Image.new("RGB", (320, 240), color=(255, 0, 0))
    display.image(image_red)
    time.sleep(2)

    # Crear una imagen verde
    image_green = Image.new("RGB", (320, 240), color=(0, 255, 0))
    display.image(image_green)
    time.sleep(2)

    # Crear una imagen azul
    image_blue = Image.new("RGB", (320, 240), color=(0, 0, 255))
    display.image(image_blue)
    time.sleep(2)

    # Crear una imagen con texto
    image_text = Image.new("RGB", (320, 240), color=(0, 0, 0))
    draw = ImageDraw.Draw(image_text)
    font = ImageFont.load_default()
    draw.text((10, 10), "Hola, Mundo!", font=font, fill=(255, 255, 255))
    display.image(image_text)
    time.sleep(2)









import digitalio
import board
from PIL import Image, ImageOps
from adafruit_rgb_display import ili9341
import time
import mss
import numpy as np

print("Configurando la interfaz SPI...")

# Configuración de la interfaz SPI
spi = board.SPI()
tft_cs = digitalio.DigitalInOut(board.CE0)
tft_dc = digitalio.DigitalInOut(board.D25)
tft_reset = digitalio.DigitalInOut(board.D24)

print("Inicializando la pantalla TFT...")

# Configuración de la pantalla
display = ili9341.ILI9341(spi, cs=tft_cs, dc=tft_dc, rst=tft_reset, width=320, height=240, rotation=0)

# Obtener el tamaño de la pantalla
screen_width = 320
screen_height = 240

def capturar_pantalla():
    with mss.mss() as sct:
        monitor = sct.monitors[1]  # Usar el primer monitor
        screenshot = sct.grab(monitor)
        img = Image.frombytes('RGB', (screenshot.width, screenshot.height), screenshot.rgb)
        # Convertir la imagen a BGR y luego a RGB
        r, g, b = img.split()
        img = Image.merge("RGB", (b, g, r))
        return img

def mostrar_pantalla_tft(image):
    # Ajustar la imagen al tamaño de la pantalla TFT, manteniendo la relación de aspecto
    image = ImageOps.fit(image, (screen_width, screen_height), method=Image.BICUBIC, bleed=0.0, centering=(0.5, 0.5))
    display.image(image)

try:
    while True:
        screenshot = capturar_pantalla()
        mostrar_pantalla_tft(screenshot)
        time.sleep(0.1)  # Ajusta el intervalo de tiempo según sea necesario

except KeyboardInterrupt:
    print("Programa terminado.")
